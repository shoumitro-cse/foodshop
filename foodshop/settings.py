"""
Django settings for foodshop project.

Generated by 'django-admin startproject' using Django 3.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

PROJECT_PATH = os.path.realpath(os.path.dirname(__file__))
#PROJECT_PATH = '/home/shoumitro/Documents/html_ex/FoodShop_Project/foodshop/foodshop'

# MEDIA_ROOT = PROJECT_PATH + '/media/'

TEMPLATE_DIRS = (
    PROJECT_PATH + '/templates/',
)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#BASE_DIR = '/home/shoumitro/Documents/html_ex/FoodShop_Project/foodshop/'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'a*k=a+wxu^8=uu0br)kex*@k*9zq$z*+5gak027ekr7219fi&c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

ALLOWED_HOSTS = ['localhost','127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'public',
    'user_account',
    'admin_task',
    'django.contrib.admindocs',
    'django_cleanup.apps.CleanupConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'foodshop.urls'


#Configuring an DjangoTemplates engine And Jinja2 engine
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',#default
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'root_templates'),
            os.path.join(BASE_DIR, 'user_account/user_templates'),
            os.path.join(BASE_DIR, 'public/templates'),
            os.path.join(BASE_DIR, 'admin_task/templates'),
        ],
        'APP_DIRS': False,#default
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',#default
                'django.template.context_processors.request',#default
                'django.contrib.auth.context_processors.auth',#default
                'django.contrib.messages.context_processors.messages',#default
            ],
            'autoescape':True,#default
            'debug':True,#default
            'string_if_invalid':"<span style='color:red;' >(Hello, Variable error)<span>",
            'file_charset':"utf-8",#default
            'builtins':[
                'django.template.defaulttags',#default
                'django.template.defaultfilters',#default
                'django.template.loader_tags',#default
            ],
            'libraries': { #for define custom template tag
                # 'define_action': 'public.templatetags.define_action', #it is default directory. it is not include but work perfectly
                'define_action': 'public.templatetags.define_action',
                'admin.urls': 'django.contrib.admin.templatetags.admin_urls',#default
                'humanize': 'django.contrib.humanize.templatetags.humanize',
            },
            # 'loaders': [
            #     (
            #         'django.template.loaders.filesystem.Loader',
            #         # 'django.template.loaders.app_directories.Loader',
            #         [
            #             os.path.join(BASE_DIR, 'templates'),
            #             os.path.join(BASE_DIR, 'root_templates'),
            #             os.path.join(BASE_DIR, 'user_account/user_templates'),
            #             os.path.join(BASE_DIR, 'public/templates'),
            #             os.path.join(BASE_DIR, 'admin_task/templates'),
            #         ],
            #     ),
            # ]
        },
    },
    # {
    #     'BACKEND': 'django.template.backends.jinja2.Jinja2',
    #     'DIRS': [
    #         os.path.join(BASE_DIR, 'templates'),
    #         os.path.join(BASE_DIR, 'user_account/user_templates'),
    #         os.path.join(BASE_DIR, 'public/public_templates'),
    #         os.path.join(BASE_DIR, 'admin_task/templates'),
    #     ],
    # },
]
#TEMPLATE_DIRS = (
  #  '/home/shoumitro/Documents/html_ex/FoodShop_Project/foodshop/temp',
#)
WSGI_APPLICATION = 'foodshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases


# ./manage.py migrate --database=sqilte_db
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'foodshop',#database name
        'USER':'root',
        'PASSWORD':'',
        'HOST':'127.0.0.1',
        'PORT':'3306',
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'", # this option for MySQLdb prior to creating your tables:
            # 'read_default_file': '/opt/lampp/etc/my.cnf',

        },
    },
    'sqilte_db': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    # 'oracle_db': {
    #     'ENGINE': 'django.db.backends.oracle',
    #     'NAME': 'xe',
    #     'USER': 'a_user',
    #     'PASSWORD': 'a_password',
    #     'HOST': 'dbprod01ned.mycompany.com',
    #     'PORT': '1540',
    # },
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE =  'Asia/Dhaka'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/


STATIC_URL = '/static/'

#The STATICFILES_DIRS tuple tells Django where to look for static files that are not tied to a particular app.
STATICFILES_DIRS = (
   os.path.join(BASE_DIR, 'static'),
   # os.path.join(BASE_DIR, 'media'),
#     os.path.join(BASE_DIR, 'user_static'),
#     os.path.join(BASE_DIR, 'root_static'),
)

#python manage.py collectstatic
#this cmd gather all static files into a folder called staticfiles in our project root directory.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
